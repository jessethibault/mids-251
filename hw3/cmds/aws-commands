# Run on local machine
## Security groups and keypair were setup from Lab 02
aws ec2 describe-security-groups | grep -A20 PrivateSG | grep GroupId
sg-04e2d5bf908108505

## Get ubuntu image name
aws ec2 describe-images  --filters  Name=name,Values='ubuntu/images/hvm-ssd/ubuntu-bionic-18.04*' Name=architecture,Values=x86_64   | head -100
ami-0010d386b82bc06f0

## Create instance for image processor
aws ec2 run-instances --image-id ami-0010d386b82bc06f0 --instance-type t2.medium --security-group-ids sg-04e2d5bf908108505 --associate-public-ip-address --key-name hw3-image-processor

## Find public DNS name
aws ec2 describe-instances | grep PublicDnsName
"PublicDnsName": "ec2-18-118-218-53.us-east-2.compute.amazonaws.com"

## Open port for message forwarder to talk to cloud instance
aws ec2 authorize-security-group-ingress --group-id sg-04e2d5bf908108505 --protocol tcp --port 32000 --cidr 0.0.0.0/0

## Create s3 bucket for images
aws s3api create-bucket --bucket hw3-faces --region us-east-2 --create-bucket-configuration LocationConstraint=us-east-2

## Connect to the AWS instance
ssh -A ubuntu@ec2-18-118-218-53.us-east-2.compute.amazonaws.com.amazonaws.com

# Run on the host
## Install Docker
sudo apt-get update
sudo apt-get install apt-transport-https ca-certificates curl gnupg lsb-release
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
echo \
>   "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
>   $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
sudo apt-get install docker-ce docker-ce-cli containerd.io

## Install k3s
sudo apt install -y curl
mkdir $HOME/.kube/
curl -sfL https://get.k3s.io | sh -s - --docker --write-kubeconfig-mode 644 --write-kubeconfig $HOME/.kube/con

## Setup git
ssh-keygen -t ed25519 -C "jethibau@ischool.berkeley.edu"
eval "$(ssh-agent -s)"
ssh-add ~/.ssh/id_ed25519
cat id_ed25519.pub
# Add the public key to GitHub as a new SSH key
git clone git@github.com:jessethibault/mids-251.git

## Build the linux/amd64 broker image
sudo docker build -t cloud-broker --platform linux/amd64 --no-cache .
sudo docker tag cloud-broker jethibau/hw3-cloud-broker
sudo docker push jethibau/hw3-cloud-broker

## Build the linux/amd64 image processor image
sudo docker build -t image-processor --platform linux/amd64 --no-cache .
sudo docker tag image-processor jethibau/hw3-image-processor
sudo docker push jethibau/hw3-image-processor

## Run the containers in Kubernetes
cd ~/mids-251/hw3/cloud-broker/
kubectl apply -f cloud-broker.yaml
kubectl apply -f mosquitto-service.yaml
cd ~/mids-251/hw3/image-processor/
kubectl apply -f image-processor.yaml

